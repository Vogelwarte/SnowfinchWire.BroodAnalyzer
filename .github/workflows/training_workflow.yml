name: "Train model"

on:
  workflow_dispatch:
    inputs:
      cnn_arch:
        description: CNN architecture
        required: true
        type: choice
        options:
          - resnet18
          - resnet50
          - vgg11_bn
          - resnet101
          - densenet121
          - inception_v3
        default: resnet50
      learning_rate:
        description: Learning rate
        required: true
        default: 0.001
      batch_size:
        description: Batch size
        required: true
        default: 100
      event:
        description: Target event
        type: choice
        options:
          - feeding
          - contact
          - all
        required: true
        default: all
      n_epochs:
        description: Training epochs count
        required: true
        default: 20
      target:
        description: Predition target
        required: true
        type: choice
        options:
          - size
          - age
          - all
        default: all
      age_groups:
        description: Wide classes for brood age
        required: false
        type: string
        default: 0-6,7-11,12-14,15-18
      samples_per_class:
        description: Target count of samples per class
        required: true
        type: string
        default: min
      data_split_config:
        description: Data split configuration file
        required: true
        type: choice
        options:
          - data-split-bs3-4-ba0-6-9-12-15.json
          - data-split-bs3-4-ba0-7-12-15.json

permissions:
  contents: read

env:
  DATA_PATH: /home/falco_ghrunner/Snowfinch-acoustics/AI_training_recordings

jobs:
  train:
    name: "Train ${{ github.event.inputs.cnn_arch }}(lr${{ github.event.inputs.learning_rate }}, bs${{ github.event.inputs.batch_size }}) for ${{ github.event.inputs.target }}"
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - name: Checkout submodules using a PAT
        run: |
          git config --file .gitmodules --get-regexp url | while read url; do
            git config --file=.gitmodules $(echo "$url" | sed -E "s/git@github.com:|https:\/\/github.com\//https:\/\/${{ secrets.SNOWFINCHWIRE_ALL_CHECKOUT }}:${{ secrets.SNOWFINCHWIRE_ALL_CHECKOUT }}@github.com\//")
          done
          git submodule sync
          git submodule update --init --recursive
      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Cache training data
        id: cache-train-data
        uses: actions/cache@v3
        with:
          key: s2.0-o1.0
          path: |
            data-export
            audio-work
      - name: Prepare training data
        if: ${{ steps.cache-train-data.outputs.cache-hit != 'true' }}
        run: python -m sfw_brood.export_data -s 2.0 -o 1.0 -w audio-work "$DATA_PATH" data-export
      - name: Run training
        run: |
          python -m sfw_brood.train \
          -n ${{ github.event.inputs.n_epochs }} -a ${{ github.event.inputs.cnn_arch }} -d 2.0 \
          -b ${{ github.event.inputs.batch_size }} -l ${{ github.event.inputs.learning_rate }} \
          -e ${{ github.event.inputs.event }} -t ${{ github.event.inputs.target }} \
          -c "config/${{ github.event.inputs.event }}" --group-ages ${{ github.event.inputs.age_groups }} \
          --samples-per-class ${{ github.event.inputs.samples_per_class }} \
          data-export/s2.0-o1.0 audio-work/s2.0-o1.0
      - name: Archive trained model
        uses: actions/upload-artifact@v3
        with:
          name: Snowfinch-Brood-Classifier
          path: _out/B[AS]__*/
