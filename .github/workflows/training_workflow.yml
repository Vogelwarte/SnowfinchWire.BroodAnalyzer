name: "Train model"

on:
  workflow_dispatch:
    inputs:
      cnn_arch:
        description: CNN architecture
        required: true
        type: choice
        options:
          - resnet18
          - resnet50
          - resnet101
          - resnet152
          - vgg11_bn
          - densenet121
          - inception_v3
        default: resnet101
      learning_rate:
        description: Learning rate
        required: true
        default: 0.001
      batch_size:
        description: Batch size
        required: true
        default: 64
#      event:
#        description: Target event
#        type: choice
#        options:
#          - feeding
#          - contact
#          - all
#        required: true
#        default: feeding
      n_epochs:
        description: Training epochs count
        required: true
        default: 50
      target:
        description: Predition target
        required: true
        type: choice
        options:
          - size
          - age
          - all
        default: all
      age_groups:
        description: Wide classes for brood age
        required: false
        type: choice
        options:
          - 0-5.5,6-8.5,9-11.5,12-14.5,15-30
          - 0-4.5,5-6.5,7-8.5,9-10.5,11-12.5,13-14.5,15-16.5,17-30
          - none
        default: 0-5.5,6-8.5,9-11.5,12-14.5,15-30
      size_groups:
        description: Wide classes for brood size
        required: false
        type: choice
        options:
          - 0-3,4-6
          - none
        default: 0-5.5,6-8.5,9-11.5,12-14.5,15-30
      samples_per_class:
        description: Target count of samples per class
        required: true
        type: string
        default: max
#      data_split_config:
#        description: Data split configuration file
#        required: true
#        type: choice
#        options:
#          - data-split-server.json
#        default: data-split-server.json
      sample_duration:
        description: Duration of train/test sound sample
        required: true
        type: choice
        options:
          - 2
          - 5
          - 10
        default: s5.0-o1.0
      age_mode:
        description: Brood age classification mode
        required: true
        type: choice
        options:
          - single
          - multi
        default: single

permissions:
  contents: read

env:
  WORK_DIR: /home/gardzielb/sfw-brood-work

jobs:
  train:
    name: "Train ${{ github.event.inputs.cnn_arch }}(lr${{ github.event.inputs.learning_rate }}, bs${{ github.event.inputs.batch_size }}) for ${{ github.event.inputs.target }}"
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - name: Checkout submodules using a PAT
        run: |
          git config --file .gitmodules --get-regexp url | while read url; do
            git config --file=.gitmodules $(echo "$url" | sed -E "s/git@github.com:|https:\/\/github.com\//https:\/\/${{ secrets.SNOWFINCHWIRE_ALL_CHECKOUT }}:${{ secrets.SNOWFINCHWIRE_ALL_CHECKOUT }}@github.com\//")
          done
          git submodule sync
          git submodule update --init --recursive
      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#      - name: Cache training data
#        id: cache-train-data
#        uses: actions/cache@v3
#        with:
#          key: s2.0-o1.0
#          path: |
#            data-export
#            audio-work
#      - name: Prepare training data
#        if: ${{ steps.cache-train-data.outputs.cache-hit != 'true' }}
#        run: python -m sfw_brood.export_data -s 2.0 -o 1.0 -w audio-work "$DATA_PATH" data-export
      - name: Run training
        run: |
          python -m sfw_brood.train \
          -n ${{ github.event.inputs.n_epochs }} -a ${{ github.event.inputs.cnn_arch }} -d 2.0 \
          -b ${{ github.event.inputs.batch_size }} -l ${{ github.event.inputs.learning_rate }} \
          -d ${{ github.event.inputs.sample_duration }} -t ${{ github.event.inputs.target }} \
          -e feeding -c config/data-split-server.json -w 12 \
          --group-ages ${{ github.event.inputs.age_groups }} \
          --group-sizes ${{ github.event.inputs.size_groups }} \
          --samples-per-class ${{ github.event.inputs.samples_per_class }} \
          --age-mode ${{ github.event.inputs.age_mode }} \
          "$WORK_DIR/out/s${{ github.event.inputs.sample_duration }}.0-o1.0" \
          "$WORK_DIR/s${{ github.event.inputs.sample_duration }}-o1/s${{ github.event.inputs.sample_duration }}.0-o1.0"
      - name: Store results
        run: cp -R _out/* "$WORK_DIR"/results/
#      - name: Archive trained model
#        uses: actions/upload-artifact@v3
#        with:
#          name: Snowfinch-Brood-Classifier
#          path: _out/B[AS]__*/
