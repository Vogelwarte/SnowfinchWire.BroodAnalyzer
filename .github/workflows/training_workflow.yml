name: "Train model"

on:
  workflow_dispatch:
    inputs:
      cnn_arch:
        description: CNN architecture
        required: true
        type: choice
        options:
          - resnet18
          - resnet50
          - resnet101
          - resnet152
          - vgg11_bn
          - densenet121
          - inception_v3
        default: resnet101
      learning_rate:
        description: Learning rate
        required: true
        default: 0.003
      batch_size:
        description: Batch size
        required: true
        default: 64
      n_epochs:
        description: Training epochs count
        required: true
        default: 30
      target:
        description: Predition target
        required: true
        type: choice
        options:
          - size
          - age
          - all
        default: all
      samples_per_class:
        description: Target count of samples per class
        required: true
        type: string
        default: 10_000
      data_config:
        description: Data configuration file
        required: true
        type: choice
        options:
          - data-split-server.json
          - data-no-test.json
          - data-fold-1.json
          - data-fold-2.json
          - data-fold-3.json
          - data-age-0-8-fold-1.json
          - data-age-0-8-fold-2.json
          - data-age-0-8-fold-3.json
          - data-age-8-13-fold-1.json
          - data-age-8-13-fold-2.json
          - data-age-13+-fold-1.json
          - data-age-13+-fold-2.json
        default: data-split-server.json
      sample_duration:
        description: Duration of train/test sound sample
        required: true
        type: choice
        options:
          - 2
          - 5
          - 10
        default: 5
      age_mode:
        description: Brood age classification mode
        required: true
        type: choice
        options:
          - single
          - multi-0.5
          - multi-0.7
          - multi-0.9
        default: single
      age_range:
        description: Age range in which size classification is to be performed
        required: false
        type: choice
        options:
          - 0-8
          - 8-13
          - 13-30
          - none
        default: none

permissions:
  contents: read

env:
  WORK_DIR: /home/gardzielb/sfw-brood-work

jobs:
  train:
    name: "Train ${{ github.event.inputs.cnn_arch }}(lr${{ github.event.inputs.learning_rate }}, bs${{ github.event.inputs.batch_size }}) for ${{ github.event.inputs.target }}"
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - name: Checkout submodules using a PAT
        run: |
          git config --file .gitmodules --get-regexp url | while read url; do
            git config --file=.gitmodules $(echo "$url" | sed -E "s/git@github.com:|https:\/\/github.com\//https:\/\/${{ secrets.SNOWFINCHWIRE_ALL_CHECKOUT }}:${{ secrets.SNOWFINCHWIRE_ALL_CHECKOUT }}@github.com\//")
          done
          git submodule sync
          git submodule update --init --recursive
      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Run training
        run: |
          python -m sfw_brood.train \
          -n ${{ github.event.inputs.n_epochs }} -a ${{ github.event.inputs.cnn_arch }} \
          -b ${{ github.event.inputs.batch_size }} -l ${{ github.event.inputs.learning_rate }} \
          -d ${{ github.event.inputs.sample_duration }} -t ${{ github.event.inputs.target }} \
          -e feeding -c config/${{ github.event.inputs.data_config }} -w 12 \
          --samples-per-class ${{ github.event.inputs.samples_per_class }} \
          --age-mode ${{ github.event.inputs.age_mode }} \
          --age-range ${{ github.event.inputs.age_range }} \
          "$WORK_DIR/out/s${{ github.event.inputs.sample_duration }}.0-o1.0" \
          "$WORK_DIR/s${{ github.event.inputs.sample_duration }}-o1/s${{ github.event.inputs.sample_duration }}.0-o1.0"
      - name: Test size model inference
        if: ${{ github.event.inputs.target == 'size' || github.event.inputs.target == 'all' }}
        run: |
          OUT_DIR=$(ls _out | grep BS__)
          python -m sfw_brood.test \
          -d /home/gardzielb/snowfinch_recordings -c config/${{ github.event.inputs.data_config }} \
          -m _out/$OUT_DIR/cnn.model.zip -o _out/$OUT_DIR/inference/ -t size -p 2 -w 12 \
          /home/gardzielb/snowfinch-recordings.csv
      - name: Test age model inference
        if: ${{ github.event.inputs.target == 'age' || github.event.inputs.target == 'all' }}
        run: |
          OUT_DIR=$(ls _out | grep BA__)
          python -m sfw_brood.test \
          -d /home/gardzielb/snowfinch_recordings -c config/${{ github.event.inputs.data_config }} \
          -m _out/$OUT_DIR/cnn.model.zip -o _out/$OUT_DIR/inference/ -t age -p 2 -w 12 \
          /home/gardzielb/snowfinch-recordings.csv
      - name: Explore results directory
        run: tree -I '*venv*|lightning_logs|nemo_experiments' --matchdirs .
      - name: Store results
        run: cp -R _out/* "$WORK_DIR"/results/
#      - name: Archive trained model
#        uses: actions/upload-artifact@v3
#        with:
#          name: Snowfinch-Brood-Classifier
#          path: _out/B[AS]__*/
